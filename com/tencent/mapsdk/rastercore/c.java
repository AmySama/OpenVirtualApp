package com.tencent.mapsdk.rastercore;

import java.util.Locale;

public final class c {
  private static double[] a;
  
  private static double[] b;
  
  private static boolean c;
  
  private static boolean d = "CN".equals(Locale.getDefault().getCountry());
  
  private static String e = "124.370000,40.090000:126.910000,41.300:128.160000,41.380000:128.060000,42.000000:129.710000,42.440000:129.910000,43.010000:130.600000,42.420000:130.810000,42.420000:131.310000,43.390000:131.150000,44.840000:131.860000,45.050000:133.320000,45.030000:135.340000,48.670000:131.790000,48.290000:130.670000,48.860000:128.10000,50.0000:126.100000,52.760000:123.380000,53.530000:120.860000,53.280000:120.030000,52.770000:120.780000,52.110000:119.210000,50.020000:117.870000,49.520000:116.710000,49.830000:115.590000,47.920000:117.370000,47.650000:118.540000,47.990000:119.900000,46.680000:117.420000,46.580000:113.640000,44.750000:111.980000,45.090000:111.420000,44.380000:111.960000,43.690000:110.440000,42.780000:107.470000,42.470000:105.010000,41.580000:100.840000,42.680000:96.380000,42.730000:95.420000,44.290000:90.900000,45.250000:91.020000,46.600000:90.070000,47.890000:88.650000,48.180000:87.840000,49.170000:87.350000,49.090000:85.760000,48.390000:85.530000,47.060000:83.040000,47.210000:82.320000,45.570000:82.560000,45.130000:79.870000,44.900000:80.520000,44.730000:80.820000,43.160000:80.380000,43.030000:80.230000,42.200000:78.080000,41.040000:76.870000,41.010000:76.350000,40.350000:74.860000,40.520000:73.660000,39.450000:73.820000,38.610000:74.860000,38.470000:74.920000,37.240000:74.570000,37.030000:74.820000,37.020000:75.860000,36.660000:76.170000,35.820000:77.820000,35.500000:78.080000,35.450000:79.530000,32.750000:78.400000,32.550000:78.770000,31.310000:81.030000,30.200000:82.100000,30.340000:86.010000,27.880000:88.140000,27.870000:88.830000,28.010000:88.920000,27.320000:89.590000,28.140000:90.470000,28.070000:91.660000,27.760000:92.040000,26.600000:93.540000,26.800000:94.650000,27.330000:96.400000,28.00000:97.100000,27.60000:97.550000,27.820000:97.550000,28.220000:97.810000,28.340000:98.400000,27.540000:98.780000,26.640000:98.220000,25.860000:97.550000,24.940000:97.540000,23.940000:98.890000,24.160000:98.930000,23.190000:99.570000,22.940000:99.160000,22.160000:99.960000,22.050000:100.210000,21.430000:101.150000,21.570000:101.450000,21.070:101.790000,21.140000:101.570000,22.210000:102.140000,22.400000:102.480000,22.770000:103.960000,22.500000:105.350000,23.330000:105.580000,23.060000:106.710000,22.860000:106.690000,22.030000:107.990000,21.540000:107.490036,19.305984:109.748489,14.674666:110.039063,11.480025:107.666016,6.271618:111.752930,3.281824:112.939454,3.413421:115.018257,6.054474:118.674316,10.790140:119.164223,12.212996:119.707031,18.020528:121.959229,21.677848:122.699226,23.809795:127.303391,24.447079:127.390663,31.568056:124.335754,32.823666";
  
  static {
    a("124.370000,40.090000:126.910000,41.300:128.160000,41.380000:128.060000,42.000000:129.710000,42.440000:129.910000,43.010000:130.600000,42.420000:130.810000,42.420000:131.310000,43.390000:131.150000,44.840000:131.860000,45.050000:133.320000,45.030000:135.340000,48.670000:131.790000,48.290000:130.670000,48.860000:128.10000,50.0000:126.100000,52.760000:123.380000,53.530000:120.860000,53.280000:120.030000,52.770000:120.780000,52.110000:119.210000,50.020000:117.870000,49.520000:116.710000,49.830000:115.590000,47.920000:117.370000,47.650000:118.540000,47.990000:119.900000,46.680000:117.420000,46.580000:113.640000,44.750000:111.980000,45.090000:111.420000,44.380000:111.960000,43.690000:110.440000,42.780000:107.470000,42.470000:105.010000,41.580000:100.840000,42.680000:96.380000,42.730000:95.420000,44.290000:90.900000,45.250000:91.020000,46.600000:90.070000,47.890000:88.650000,48.180000:87.840000,49.170000:87.350000,49.090000:85.760000,48.390000:85.530000,47.060000:83.040000,47.210000:82.320000,45.570000:82.560000,45.130000:79.870000,44.900000:80.520000,44.730000:80.820000,43.160000:80.380000,43.030000:80.230000,42.200000:78.080000,41.040000:76.870000,41.010000:76.350000,40.350000:74.860000,40.520000:73.660000,39.450000:73.820000,38.610000:74.860000,38.470000:74.920000,37.240000:74.570000,37.030000:74.820000,37.020000:75.860000,36.660000:76.170000,35.820000:77.820000,35.500000:78.080000,35.450000:79.530000,32.750000:78.400000,32.550000:78.770000,31.310000:81.030000,30.200000:82.100000,30.340000:86.010000,27.880000:88.140000,27.870000:88.830000,28.010000:88.920000,27.320000:89.590000,28.140000:90.470000,28.070000:91.660000,27.760000:92.040000,26.600000:93.540000,26.800000:94.650000,27.330000:96.400000,28.00000:97.100000,27.60000:97.550000,27.820000:97.550000,28.220000:97.810000,28.340000:98.400000,27.540000:98.780000,26.640000:98.220000,25.860000:97.550000,24.940000:97.540000,23.940000:98.890000,24.160000:98.930000,23.190000:99.570000,22.940000:99.160000,22.160000:99.960000,22.050000:100.210000,21.430000:101.150000,21.570000:101.450000,21.070:101.790000,21.140000:101.570000,22.210000:102.140000,22.400000:102.480000,22.770000:103.960000,22.500000:105.350000,23.330000:105.580000,23.060000:106.710000,22.860000:106.690000,22.030000:107.990000,21.540000:107.490036,19.305984:109.748489,14.674666:110.039063,11.480025:107.666016,6.271618:111.752930,3.281824:112.939454,3.413421:115.018257,6.054474:118.674316,10.790140:119.164223,12.212996:119.707031,18.020528:121.959229,21.677848:122.699226,23.809795:127.303391,24.447079:127.390663,31.568056:124.335754,32.823666");
  }
  
  public static void a(String paramString) {
    String[] arrayOfString = paramString.split(":");
    if (arrayOfString != null) {
      a = new double[arrayOfString.length];
      b = new double[arrayOfString.length];
      int i = arrayOfString.length;
      byte b1 = 0;
      byte b2 = 0;
      while (b1 < i) {
        String[] arrayOfString1 = arrayOfString[b1].split(",");
        a[b2] = Double.parseDouble(arrayOfString1[0]) * 2.003750834E7D / 180.0D;
        b[b2] = Math.log(Math.tan((Double.parseDouble(arrayOfString1[1]) + 90.0D) * Math.PI / 360.0D)) / 0.017453292519943295D * 2.003750834E7D / 180.0D;
        b2++;
        b1++;
      } 
    } 
  }
  
  public static void a(boolean paramBoolean) {
    d = paramBoolean;
  }
  
  public static boolean a() {
    return (!d && c);
  }
  
  public static boolean a(double paramDouble1, double paramDouble2) {
    // Byte code:
    //   0: getstatic com/tencent/mapsdk/rastercore/c.b : [D
    //   3: arraylength
    //   4: iconst_1
    //   5: isub
    //   6: istore #4
    //   8: iconst_0
    //   9: istore #5
    //   11: iconst_0
    //   12: istore #6
    //   14: getstatic com/tencent/mapsdk/rastercore/c.b : [D
    //   17: astore #7
    //   19: iload #5
    //   21: aload #7
    //   23: arraylength
    //   24: if_icmpge -> 195
    //   27: aload #7
    //   29: iload #5
    //   31: daload
    //   32: dload_2
    //   33: dcmpg
    //   34: ifge -> 47
    //   37: aload #7
    //   39: iload #4
    //   41: daload
    //   42: dload_2
    //   43: dcmpl
    //   44: ifge -> 80
    //   47: getstatic com/tencent/mapsdk/rastercore/c.b : [D
    //   50: astore #7
    //   52: iload #6
    //   54: istore #8
    //   56: aload #7
    //   58: iload #4
    //   60: daload
    //   61: dload_2
    //   62: dcmpg
    //   63: ifge -> 181
    //   66: iload #6
    //   68: istore #8
    //   70: aload #7
    //   72: iload #5
    //   74: daload
    //   75: dload_2
    //   76: dcmpl
    //   77: iflt -> 181
    //   80: getstatic com/tencent/mapsdk/rastercore/c.a : [D
    //   83: astore #7
    //   85: aload #7
    //   87: iload #5
    //   89: daload
    //   90: dload_0
    //   91: dcmpg
    //   92: ifle -> 109
    //   95: iload #6
    //   97: istore #8
    //   99: aload #7
    //   101: iload #4
    //   103: daload
    //   104: dload_0
    //   105: dcmpg
    //   106: ifgt -> 181
    //   109: getstatic com/tencent/mapsdk/rastercore/c.a : [D
    //   112: astore #9
    //   114: aload #9
    //   116: iload #5
    //   118: daload
    //   119: dstore #10
    //   121: getstatic com/tencent/mapsdk/rastercore/c.b : [D
    //   124: astore #7
    //   126: dload #10
    //   128: dload_2
    //   129: aload #7
    //   131: iload #5
    //   133: daload
    //   134: dsub
    //   135: aload #7
    //   137: iload #4
    //   139: daload
    //   140: aload #7
    //   142: iload #5
    //   144: daload
    //   145: dsub
    //   146: ddiv
    //   147: aload #9
    //   149: iload #4
    //   151: daload
    //   152: aload #9
    //   154: iload #5
    //   156: daload
    //   157: dsub
    //   158: dmul
    //   159: dadd
    //   160: dload_0
    //   161: dcmpg
    //   162: ifge -> 171
    //   165: iconst_1
    //   166: istore #4
    //   168: goto -> 174
    //   171: iconst_0
    //   172: istore #4
    //   174: iload #6
    //   176: iload #4
    //   178: ixor
    //   179: istore #8
    //   181: iload #5
    //   183: istore #4
    //   185: iinc #5, 1
    //   188: iload #8
    //   190: istore #6
    //   192: goto -> 14
    //   195: iload #6
    //   197: ireturn
  }
  
  public static void b(double paramDouble1, double paramDouble2) {
    c = a(paramDouble1 * 2.003750834E7D / 180.0D, Math.log(Math.tan((paramDouble2 + 90.0D) * Math.PI / 360.0D)) / 0.017453292519943295D * 2.003750834E7D / 180.0D) ^ true;
  }
}


/* Location:              F:\何章易\项目文件夹\项目24\va\classes_merge.jar!\com\tencent\mapsdk\rastercore\c.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */